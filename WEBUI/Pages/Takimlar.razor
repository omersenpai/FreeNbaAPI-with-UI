@page "/Takimlar"
@using System.Text.Json
@using WEBUI.Pages.Modal
<style>
  
    .container {
        max-width: 800px;
        margin: 0 auto;
        padding: 20px;
        text-align: center;
    }

    .welcome-title {
        font-size: 24px;
        color: #1b6ec2;
        margin-bottom: 20px;
    }

    .button-container {
        margin-bottom: 20px;
    }

    .btn {
        display: inline-block;
        padding: 10px 20px;
        font-size: 16px;
        color: #fff;
        background-color: #1b6ec2;
        border: none;
        cursor: pointer;
        transition: background-color 0.3s;
        margin-right: 10px;
    }

        .btn:hover {
            background-color: #1861ac;
        }

    /* Team styles */
    .team-card {
        width: calc(50% - 20px); 
        border: 1px solid #ccc;
        padding: 10px;
        background-color: #f8f8f8;
        transition: background-color 0.3s;
        box-sizing: border-box;
        margin: 0 10px 20px; 
        display: inline-block; 
    }

        .team-card:hover {
            background-color: #eaeaea;
        }

        .team-card h3 {
            margin-bottom: 10px;
            font-size: 18px;
            color: #000;
            font-weight: bold; 
        }

        .team-card p {
            line-height: 1.5;
        }

   
    .player-card {
        width: calc(50% - 20px); 
        border: 1px solid #ddd;
        padding: 10px;
        background-color: #f0f0f0;
        transition: background-color 0.3s;
        box-sizing: border-box;
        margin: 0 10px 20px; 
        display: inline-block; 
    }

        .player-card:hover {
            background-color: #e0e0e0;
        }

        .player-card h3 {
            margin-bottom: 10px;
            font-size: 18px;
            color: #1b6ec2;
        }

        .player-card p {
            line-height: 1.5;
        }

    
    .card-container {
        text-align: center; 
    }
</style>






    

<div class="container">
    <h1 class="welcome-title">NBA Takımlar</h1>

    <div class="button-container">
        <button class="btn" @onclick="GetAllTeams">Tüm Takımları Getir</button>
        <button class="btn" @onclick="OpenTeamModal">Belirli Takımı Getir</button>
    </div>

    @if (Teams != null)
    {
        <h2>Takımlar:</h2>
        <div class="players-container">
            @foreach (var team in Teams)
            {
                <div class="team-card">
                    <h3>@team.full_name</h3>
                    <p>
                        <strong>Kısaltma:</strong> @team.abbreviation<br />
                        <strong>Şehir:</strong> @team.city<br />
                        <strong>Konferans:</strong> @team.conference<br />
                        <strong>Bölge:</strong> @team.division<br />
                        <strong>Tam Ad:</strong> @team.full_name<br />
                    </p>
                </div>
            }
        </div>
    }

    @if (SelectedTeam != null)
    {
        <h2>Seçili Takım:</h2>
        <div class="team-card">
            <h3>@SelectedTeam.full_name</h3>
            <p>
                <strong>Kısaltma:</strong> @SelectedTeam.abbreviation<br />
                <strong>Şehir:</strong> @SelectedTeam.city<br />
                <strong>Konferans:</strong> @SelectedTeam.conference<br />
                <strong>Bölge:</strong> @SelectedTeam.division<br />
                <strong>Tam Ad:</strong> @SelectedTeam.full_name<br />
            </p>
        </div>
    }

    @if (IsTeamModalOpen)
    {
        <Modal>
            <h3>Takım ID'sini Girin</h3>
            <input @bind="TeamIdInput" class="input-field" />
            <button class="btn" @onclick="GetSpecificTeam">Getir</button>
            <button class="btn" @onclick="CloseTeamModal">Kapat</button>
        </Modal>
    }
</div>

@code {
    private List<Team.TeamInfo> Teams;
    private Team.TeamInfo SelectedTeam;
    private bool IsTeamModalOpen = false;
    private string TeamIdInput = "";

    private void OpenTeamModal()
    {
        IsTeamModalOpen = true;
    }

    private void CloseTeamModal()
    {
        IsTeamModalOpen = false;
    }

    private async Task GetAllTeams()
    {
        var apiUrl = "https://free-nba.p.rapidapi.com/teams?page=0&per_page=25";
        await FetchData(apiUrl);
    }

    private async Task GetSpecificTeam()
    {
        try
        {
            if (string.IsNullOrEmpty(TeamIdInput) || !int.TryParse(TeamIdInput, out int teamId))
            {
                CloseTeamModal();
                return;
            }

            var apiUrl = $"https://free-nba.p.rapidapi.com/teams/{teamId}";
            await FetchSpecificTeam(apiUrl);
            CloseTeamModal();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Hata: {ex.Message}");
            CloseTeamModal();
        }
    }

    private async Task FetchData(string apiUrl)
    {
        using (HttpClient client = new HttpClient())
        {
            client.DefaultRequestHeaders.Add("X-RapidAPI-Key", "3a939282d6msh8fd2ae1c01713d9p1c39acjsn77c428d1ce64");
            client.DefaultRequestHeaders.Add("X-RapidAPI-Host", "free-nba.p.rapidapi.com");

            var response = await client.GetStringAsync(apiUrl);
            var responseData = JsonSerializer.Deserialize<Team.TeamResponse>(response, new JsonSerializerOptions
                {
                    PropertyNameCaseInsensitive = true
                });

            Teams = responseData.data;
        }
    }

    private async Task FetchSpecificTeam(string apiUrl)
    {
        using (HttpClient client = new HttpClient())
        {
            client.DefaultRequestHeaders.Add("X-RapidAPI-Key", "3a939282d6msh8fd2ae1c01713d9p1c39acjsn77c428d1ce64");
            client.DefaultRequestHeaders.Add("X-RapidAPI-Host", "free-nba.p.rapidapi.com");

            var response = await client.GetStringAsync(apiUrl);
            SelectedTeam = JsonSerializer.Deserialize<Team.TeamInfo>(response, new JsonSerializerOptions
                {
                    PropertyNameCaseInsensitive = true
                });
        }
    }
}

